{
  "variables": {
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
    "region": "eu-west-1",
    "changelist": "0",
    "service": "unknown",
    "source_ami": "unknown",
    "versionNumber": "0.0.1",
    "branch": "unknown",
    "commit": "unknown",
    "release": "unknown",
    "user_name": "unknown",
    "tier": "unknown",
    "tier_url": "unknown",
    "debug_user": "n/a",
    "debug_pwd": "n/a"
  },
  "builders": [
    {
      "type":         "null",
      "ssh_host":     "127.0.0.1",
      "ssh_username": "{{user `debug_user`}}",
      "ssh_password": "{{user `debug_pwd`}}"
    },
    {
      "type": "amazon-ebs",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "region": "{{user `region`}}",
      "source_ami": "{{user `source_ami`}}",
      "instance_type": "m3.medium",
      "iam_instance_profile": "ec2",
      "ssh_username": "ubuntu",
      "ami_name": "{{user `service`}}-{{isotime `2006-01-02-15-04`}}",
      "tags": {
        "service-name": "{{user `service`}}",
        "creation-date": "{{isotime `2006-01-02-15-04`}}",
        "changelist": "{{user `changelist`}}",
        "branch": "{{user `branch`}}",
        "commit": "{{user `commit`}}",
        "release": "{{user `release`}}",
        "tier": "{{user `tier`}}",
        "aws_access_key": "{{user `aws_access_key`}}",
        "user-name": "{{user `user_name`}}",
        "version-number": "{{user `versionNumber`}}"
      }
    }
  ],

  "provisioners": [
    {
      "type": "shell",
      "inline": [
          "echo ----------------- Copying {{user `service`}}-{{user `versionNumber`}}.zip -----------------"
      ]
    },
    {
        "type": "file",
        "source": "./dist/{{user `service`}}-{{user `versionNumber`}}.zip",
        "destination": "~/{{user `service`}}-{{user `versionNumber`}}.zip"
    },
    {
        "type": "file",
        "source": "./dist/deployment-manifest.json",
        "destination": "~/deployment-manifest.json"
    },
    {
      "type": "shell",
      "inline": [
        "echo ----------------- Installing {{user `service`}}-{{user `versionNumber`}}.zip to /usr/local/bin/{{user `service`}}/ -----------------",
        "unzip ~/{{user `service`}}-{{user `versionNumber`}}.zip",
        "sudo mkdir -p /usr/local/bin/{{user `service`}}",
        "sudo chmod a+w /usr/local/bin/{{user `service`}}",
        "sudo mv ~/{{user `service`}}-{{user `versionNumber`}}/* /usr/local/bin/{{user `service`}}/",
        "rmdir ~/{{user `service`}}-{{user `versionNumber`}}/",
        "echo ----------------- Installing deployment-manifest.json to /usr/local/bin/{{user `service`}}/ -----------------",
        "sudo mv ~/deployment-manifest.json /usr/local/bin/{{user `service`}}/",         
        "echo ----------- Installing Service Requirements -----------",
        "sudo pip install -r /usr/local/bin/{{user `service`}}/requirements.txt",
        "echo ----------------- Configuring Service -----------------",
        "sudo cp -v /usr/local/bin/{{user `service`}}/config/upstart/*.conf /etc/init/",
        "sudo ln -s /usr/local/bin/{{user `service`}}/config/{{user `service`}}_nginx.conf /etc/nginx/sites-enabled/",
        "sudo mkdir -p /var/log/uwsgi",
        "sudo mkdir -p /var/log/nginx",
        "sudo mkdir -p /var/log/celery",
        "sudo chmod a+w /var/log/celery",
        "sudo mkdir -p /var/log/{{user `service`}}",
        "sudo mkdir -p /usr/local/bin/{{user `service`}}/logs",
        "sudo sh /usr/local/bin/{{user `service`}}/scripts/setup_instance.sh",
        "echo ----------------- Setting up Logging Config -----------------",
        "sudo cp -v /usr/local/bin/{{user `service`}}/config/rsyslog.d/*.conf /etc/rsyslog.d/",
        "sudo cp -v /usr/local/bin/{{user `service`}}/config/splunk/inputs.conf /opt/splunkforwarder/etc/system/local/",
        "sudo cp -v /usr/local/bin/{{user `service`}}/config/splunk/outputs.conf /opt/splunkforwarder/etc/system/local/",
        "sudo pip install six --upgrade",
        "sudo drift-admin tier init {{user `tier_url`}} --activate {{user `tier`}}",
        "echo ----------------- All done -----------------"
      ]
    }
  ]
}
